name: github ci/cd pipeline project

on:
  push:
    branches: [ "master" ]

env:
  MAJOR: '1'
  MINOR: '0'
  PATCH: ${{ github.run_number }}

jobs:
  depchecktest:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build project with Maven
        run: mvn clean install
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
           
  build:
    runs-on: ubuntu-latest
         
    steps:
    - uses: actions/checkout@v3
    
    - name: check files
      run: ls -la

    - name: Build the Docker image
      run: docker build --build-arg PATCH_NUM=$PATCH --build-arg MAJOR_NUM=$MAJOR --build-arg MINOR_NUM=$MINOR -t javaproject:latest .
      
    - name: show_image
      run: docker images
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

        
    - name: docker tag
      run: docker tag javaproject:latest avkh12345/github:latest
      
    - name: tag version
      run: docker tag javaproject:latest avkh12345/github:$MAJOR.$MINOR.$PATCH 
      
    - name: push latest
      run: docker push avkh12345/github:latest
      
    - name: push version
      run: docker push avkh12345/github:$MAJOR.$MINOR.$PATCH
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
          working-directory: ./terraform
    steps:
    - uses: actions/checkout@v4
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        aws-region: eu-north-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: terraform init
      run: terraform init
      
    - name: terraform destroy
      run: terraform destroy -auto-approve
      
    - name: terraform apply
      run: terraform apply -auto-approve -lock=false

    - name: terraform destroy
      run: terraform destroy -auto-approve


